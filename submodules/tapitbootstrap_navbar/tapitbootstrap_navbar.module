<?php
/**
 * Implements hook_block_info().
 */
function tapitbootstrap_navbar_block_info() {
  $blocks = array();
  $blocks['navbar'] = array(
    'info' => t('Bootstrap Navbar'),
    'status' => 1,
  );
  $blocks['admin_navbar'] = array(
    'info' => t('Bootstrap Admin Navbar'),
    'region' => 'navbar',
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
  );

  return $blocks;
}

/**
 * Implimenting hook_block_view()
 */
function tapitbootstrap_navbar_block_view($delta = '')  {
  $block = array();
  switch ($delta) {
    case 'navbar':
      $block['subject'] = t(''); //Leave it empty, a navbar doesn't need a title :)
      $block['content'] = tapitbootstrap_navbar_build_navbar(variable_get('navbar_menu'), 'navbar');
      break;
    case 'admin_navbar':
      $block['subject'] = t(''); //Leave it empty, a navbar doesn't need a title :)
      $block['content'] = tapitbootstrap_navbar_build_navbar(variable_get('admin_navbar_menu'), 'admin_navbar', TRUE);
      break;
  }

  return $block;
}

/**
 * Implements hook_block_configure().
 */
function tapitbootstrap_navbar_block_configure($delta='') {
  $form = array();
  
  //Grab the menus within the system, and put them in an array we can use
  $menus = menu_get_names();
  $menu_options = array();
  foreach ($menus as $menu) {
    $menu_options[$menu] = $menu;
  }
  
  switch($delta) {
    case 'navbar':
      $form['navbar_menu'] = array(
        '#type' => 'select',
        '#title' => t('Source Menu'),
        '#options' => $menu_options,
        '#default_value' => variable_get('navbar_menu', 'main-menu'),
      );
      $form['navbar_classes'] = array(
        '#type' => 'textfield',
        '#title' => t('CSS Classes'),
        '#default_value' => variable_get('navbar_classes'),
      );
      $form['navbar_icons'] = array(
        '#type' => 'textarea',
        '#title' => t('Icons'),
        '#default_value' => variable_get('navbar_icons'),
        '#description' => t('Determines what Font Awesome icon should be printed before each menu item in  based off of the menu items title. (For example: My Menu Link Title | icon-font-awesome-preset)'),
      );
      break;
    case 'admin_navbar':
      $form['admin_navbar_menu'] = array(
        '#type' => 'select',
        '#title' => t('Source Menu'),
        '#options' => $menu_options,
        '#default_value' => variable_get('admin_navbar_menu'),
      );
      $form['admin_navbar_classes'] = array(
        '#type' => 'textfield',
        '#title' => t('CSS Classes'),
        '#default_value' => variable_get('admin_navbar_classes'),
      );
      $form['admin_navbar_icons'] = array(
        '#type' => 'textarea',
        '#title' => t('Icons'),
        '#default_value' => variable_get('admin_navbar_icons'),
        '#description' => t('Determines what Font Awesome icon should be printed before each menu item in  based off of the menu items title. (For example: My Menu Link Title | icon-font-awesome-preset)'),
      );
      break;

  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function tapitbootstrap_navbar_block_save($delta, $edit) {
  variable_set($delta.'_icons', $edit[$delta.'_icons']);
  variable_set($delta.'_menu', $edit[$delta.'_menu']);
  variable_set($delta.'_classes', $edit[$delta.'_classes']);
}

/**
 * Grabs a menu from the database and returns it as a Bootstrap navbar
 *
 * @param $menu_name
 *   Name of the menu in the Drupal system that the navbar should be constructed form
 *
 * @param $classes
 *   Classes to add to the navbar's wrapper (like inverse, or fixed)
 *
 * @return
 *   String containing the DOM for a Bootstrap Navbar from the Drupal Menu system
 */
function tapitbootstrap_navbar_build_navbar($menu_name, $block_name = '', $administration = FALSE) {
  $menu = menu_tree_all_data($menu_name);
  
  if ($menu) {
    if ($administration == TRUE) {
      $menu = $menu['50009 Administration 1']['below'];
    }
    
    return theme('navbar', array(
      'navbar_classes' => variable_get($block_name.'_classes'),
      'menu' => $menu,
      'block_name' => $block_name,
    ));
  }
}

/**
 * Implimenting hook_theme();
 */
function tapitbootstrap_navbar_theme() {
  return array(
    'navbar' => array(
      'template' => 'templates/navbar',
      'variables' => array(
        'navbar_classes' => '',
        'menu' => '',
      ),
    ),
  );
}
